{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","fetchedUser","go","fetchedUser1","fetchedUser2","title","before","photo_200","src","description","city","first_name","last_name","href","target","osName","platform","Persik","props","left","onClick","data-to","IOS","className","persik","alt","console","log","App","useState","activePanel","setActivePanel","setUser","setUser1","setUser2","size","popout","setPopout","useEffect","a","bridge","send","user","response","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","fetchData1","fetchData2","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ea0c307c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport { CellButton } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser, fetchedUser1, fetchedUser2}) => (\n\t<Panel id={id}>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser1.first_name} ${fetchedUser1.last_name}`}\n\t\t\t\t\n\t\t\t</Cell>\n\t\t</Group>}\n\t\t{fetchedUser1 &&\n\t\t<Group>\n\t\t\t<CellButton href=\"https://google.com\" target=\"_blank\"\n\t\t\t\tbefore={fetchedUser1.photo_200 ? <Avatar src={fetchedUser1.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser1.city && fetchedUser1.city.title ? fetchedUser1.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser1.first_name} ${fetchedUser1.last_name}`}\n\t\t\t</CellButton>\n\t\t</Group>}\n\t\t{fetchedUser2 &&\n\t\t<Group>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser2.photo_200 ? <Avatar src={fetchedUser2.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser2.city && fetchedUser2.city.title ? fetchedUser2.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser2.first_name} ${fetchedUser2.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nconsole.log('5555')\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [fetchedUser1, setUser1] = useState(null);\n\tconst [fetchedUser2, setUser2] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\t//const user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst user = await bridge.send('VKWebAppCallAPIMethod', {'method': 'users.get', 'params': {'user_ids': '218162405','fields':'first_name,photo_200,city', 'v':'5.103', 'access_token':'23aa7e864c9ce36bba8df49e23fc6d5be0e643cef221b36aebe8cafc8829656456702c3308d146cca990d'}});\n\t\t\t//console.log(user.first_name);\n\t\t\t//console.log('tt')\n\t\t\t//console.log(user.response.first_name)\n\t\t\t//console.log(user.response[0].first_name)\n\t\t\t//console.log(user[0][0]);\n\t\t\t//console.log(user[1]);\n\t\t\t//console.log(user[0].first_name);\n\t\t\t//console.log(user[0][0].first_name);\n\t\t\tsetUser(user.response[0]);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t\tasync function fetchData1() {\n\t\t\t//const user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst user = await bridge.send('VKWebAppCallAPIMethod', {'method': 'users.get', 'params': {'user_ids': '471828102','fields':'first_name,photo_200,city', 'v':'5.103', 'access_token':'23aa7e864c9ce36bba8df49e23fc6d5be0e643cef221b36aebe8cafc8829656456702c3308d146cca990d'}});\n\t\t\t//console.log(user.first_name);\n\t\t\t//console.log('tt')\n\t\t\t//console.log(user.response.first_name)\n\t\t\t//console.log(user.response[0].first_name)\n\t\t\t//console.log(user[0][0]);\n\t\t\t//console.log(user[1]);\n\t\t\t//console.log(user[0].first_name);\n\t\t\t//console.log(user[0][0].first_name);\n\t\t\tsetUser1(user.response[0]);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData1();\n\t\tasync function fetchData2() {\n\t\t\t//const user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tconst user = await bridge.send('VKWebAppCallAPIMethod', {'method': 'users.get', 'params': {'user_ids': '180825291','fields':'first_name,photo_200,city', 'v':'5.103', 'access_token':'23aa7e864c9ce36bba8df49e23fc6d5be0e643cef221b36aebe8cafc8829656456702c3308d146cca990d'}});\n\t\t\t//console.log(user.first_name);\n\t\t\t//console.log('tt')\n\t\t\t//console.log(user.response.first_name)\n\t\t\t//console.log(user.response[0].first_name)\n\t\t\t//console.log(user[0][0]);\n\t\t\t//console.log(user[1]);\n\t\t\t//console.log(user[0].first_name);\n\t\t\t//console.log(user[0][0].first_name);\n\t\t\tsetUser2(user.response[0]);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData2();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} fetchedUser1={fetchedUser1} fetchedUser2={fetchedUser2} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}